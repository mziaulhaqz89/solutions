name: 01-Export Power Platform Solution
# Export solution from DEV environment, unpack it and create a branch with the changes
# Supports multiple solutions: travelsolution, coffeeshopsolution

run-name: 01-Export Power Platform Solution - ${{ inputs.solution_name }}

on:
  workflow_dispatch:
    inputs:
      # Select the solution to export
      solution_name:
        description: 'Select the solution to export from Power Platform'
        required: true
        type: choice
        options:
          - travelsolution
          - coffeeshop
      # Optional custom branch name
      custom_branch_name:
        description: 'Custom branch name (optional - leave empty for auto-generated)'
        required: false
        type: string
      #Do Not change these values
      solution_exported_folder:
        description: 'folder name for staging the exported solution *do not change*'
        required: true
        default: out/exported/
      solution_folder:
        description: 'staging the unpacked solution folder before check-in *do not change*'
        required: true
        default: out/solutions/
      solution_target_folder:
        description: 'folder name to be created and checked in *do not change*'
        required: true
        default: solutions/
        
env:
  #edit your values here
  ENVIRONMENT_URL: ${{ vars.DEV_ENVIRONMENT_URL }}
  CLIENT_ID: ${{ vars.CLIENT_ID }}
  TENANT_ID: ${{ vars.TENANT_ID }}
permissions:
  contents: write
jobs:
  export-from-dev:
    runs-on: windows-latest
    # or you can say runs-on: ubuntu-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v4
      with:
        lfs: true

    - name: Install Power Platform CLI
      uses: microsoft/powerplatform-actions/actions-install@v1

    - name: who-am-i action
      uses: microsoft/powerplatform-actions/who-am-i@v1
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{env.TENANT_ID}}

    - name: export-solution action
      uses: microsoft/powerplatform-actions/export-solution@v1
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{env.TENANT_ID}}
        solution-name: ${{ github.event.inputs.solution_name }}
        solution-output-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip

    - name: unpack-solution action
      uses: microsoft/powerplatform-actions/unpack-solution@v1
      with:
        solution-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip
        solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
        solution-type: 'Unmanaged'
        overwrite-files: true

    - name: Generate timestamp for branch name
      id: timestamp
      run: |
        $timestamp = Get-Date -Format "yyyyMMdd-HHmm"
        echo "value=$timestamp" >> $env:GITHUB_OUTPUT

    - name: branch-solution, prepare it for a PullRequest
      uses: microsoft/powerplatform-actions/branch-solution@v1
      with:
        solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
        solution-target-folder: ${{ github.event.inputs.solution_target_folder}}/${{ github.event.inputs.solution_name }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        allow-empty-commit: true
        branch-name: ${{ github.event.inputs.custom_branch_name || format('{0}-by-{1}-{2}', github.event.inputs.solution_name, github.actor, steps.timestamp.outputs.value) }}

    - name: Run Solution Checker
      uses: microsoft/powerplatform-actions/check-solution@v1
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{env.TENANT_ID}}
        path: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip

    - name: Upload Solution Checker Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: solution-checker-results-${{ github.event.inputs.solution_name }}
        path: |
          ${{ runner.temp }}/PowerAppsChecker/**/*
        retention-days: 30