name: release-solution-to-prod-reusable
# Reusable workflow
# convert solution to managed (using a build PowerPlatform environment for the conversion)
# upload the solution to the GitHub artifacts and deploy to the PROD environment
on:
  workflow_call:
    inputs: 
      #Do Not change these values
      #Values are set by the caller
      #caller sample: release-action-call.ymnl
      solution_name:
        description: 'The solution name.'
        type: string
        default: EndeavorSolution       
      solution_shipping_folder:
        description: 'folder name for staging the exported solution *do not change*'        
        type: string
        default: out/ship/
      solution_outbound_folder:
        description: 'staging the unpacked solution folder before check-in *do not change*'
        type: string
        default: out/solutions/
      solution_source_folder: 
       description: 'folder name to be created and checked in *do not change*'
       type: string
       default: solutions/
      solution_release_folder:
       description: 'folder where the released binaries are going to be hosted *do not change*'
       type: string
       default: out/release
      BUILD_ENVIRONMENT_URL:
        description: 'Build environment url.'
        type: string
        required: false      
      TEST_ENVIRONMENT_URL:
        description: 'Test environment url.'
        type: string
        required: false
      PRODUCTION_ENVIRONMENT_URL: 
        description: 'Production environment url.'
        type: string
        required: false
      CLIENT_ID: 
        description: 'The client id'
        type: string
        required: true
      TENANT_ID: 
        description: 'The tenant id'
        type: string
        required: true
    secrets:
      envSecret:
        description: 'The secret value for authentication using SPN'
        required: true

jobs:
  convert-to-managed:
    runs-on: windows-latest
    environment: BUILD
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v4
      with:
        lfs: true

    - name: Install Power Platform CLI
      uses: microsoft/powerplatform-actions/actions-install@v1

    - name: Pack solution as unmanaged
      uses: microsoft/powerplatform-actions/pack-solution@v1
      with:
        solution-folder: ${{ inputs.solution_source_folder}}/${{ inputs.solution_name }}
        solution-file: ${{ inputs.solution_outbound_folder}}/${{ inputs.solution_name }}_unmanaged.zip
        solution-type: Unmanaged

    # Use a dedicated build environment (separate from TEST)
    - name: Import solution as unmanaged to build env (for conversion only)
      uses: microsoft/powerplatform-actions/import-solution@v1
      with:
        environment-url: ${{ vars.BUILD_ENVIRONMENT_URL || inputs.BUILD_ENVIRONMENT_URL }}
        app-id: ${{inputs.CLIENT_ID}}
        client-secret: ${{ secrets.envSecret }}
        tenant-id: ${{inputs.TENANT_ID}}
        solution-file: ${{ inputs.solution_outbound_folder}}/${{ inputs.solution_name }}_unmanaged.zip
        force-overwrite: true
        publish-changes: true

    - name: Export solution as managed
      uses: microsoft/powerplatform-actions/export-solution@v1
      with:
        environment-url: ${{ vars.BUILD_ENVIRONMENT_URL || inputs.BUILD_ENVIRONMENT_URL }}
        app-id: ${{inputs.CLIENT_ID}}
        client-secret: ${{ secrets.envSecret }} 
        tenant-id: ${{inputs.TENANT_ID}}
        solution-name: ${{ inputs.solution_name }}
        managed: true
        solution-output-file: ${{ inputs.solution_shipping_folder}}/${{ inputs.solution_name }}_managed.zip

    - name: Run Solution Checker on Managed Solution
      uses: microsoft/powerplatform-actions/check-solution@v1
      with:
        environment-url: ${{ vars.BUILD_ENVIRONMENT_URL || inputs.BUILD_ENVIRONMENT_URL }}
        app-id: ${{inputs.CLIENT_ID}}
        client-secret: ${{ secrets.envSecret }}
        tenant-id: ${{inputs.TENANT_ID}}
        path: ${{ inputs.solution_shipping_folder}}/${{ inputs.solution_name }}_managed.zip

    - name: Upload Solution Checker Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: managed-solution-checker-results-${{ inputs.solution_name }}
        path: |
          ${{ runner.temp }}/PowerAppsChecker/**/*
        retention-days: 30

    - name: Upload the ready to ship solution to GH artifact store
      uses: actions/upload-artifact@v4
      with:
        name: managedSolutions
        path: ${{ inputs.solution_shipping_folder}}/

  deploy-to-test:
    needs: [ convert-to-managed ]
    runs-on: windows-latest
    environment: 
      name: TEST
      url: ${{ vars.TEST_ENVIRONMENT_URL || inputs.TEST_ENVIRONMENT_URL }}
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v4
      with:
        lfs: true

    - name: Install Power Platform CLI
      uses: microsoft/powerplatform-actions/actions-install@v1

    - name: Fetch the ready to ship solution from GH artifact store
      uses: actions/download-artifact@v4
      with:
        name: managedSolutions
        path: ${{ inputs.solution_release_folder}}

    - name: Run Solution Checker before TEST deployment
      uses: microsoft/powerplatform-actions/check-solution@v1
      with:
        environment-url: ${{ vars.TEST_ENVIRONMENT_URL || inputs.TEST_ENVIRONMENT_URL }}
        app-id: ${{inputs.CLIENT_ID}}
        client-secret: ${{ secrets.envSecret }}
        tenant-id: ${{inputs.TENANT_ID}}
        path: ${{ inputs.solution_release_folder}}/${{ inputs.solution_name }}_managed.zip

    - name: Upload TEST Solution Checker Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-deployment-checker-results-${{ inputs.solution_name }}
        path: |
          ${{ runner.temp }}/PowerAppsChecker/**/*
        retention-days: 30
        
    - name: Import MANAGED solution to TEST env
      uses: microsoft/powerplatform-actions/import-solution@v1
      with:
        environment-url: ${{ vars.TEST_ENVIRONMENT_URL || inputs.TEST_ENVIRONMENT_URL }}
        app-id: ${{inputs.CLIENT_ID}}
        client-secret: ${{ secrets.envSecret }}
        tenant-id: ${{inputs.TENANT_ID}}
        solution-file: ${{ inputs.solution_release_folder}}/${{ inputs.solution_name }}_managed.zip
        force-overwrite: true
        publish-changes: true

  release-to-production:
    needs: [ deploy-to-test ]
    runs-on: windows-latest
    environment: 
      name: PRODUCTION
      url: ${{ vars.PRODUCTION_ENVIRONMENT_URL || inputs.PRODUCTION_ENVIRONMENT_URL }}
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v4
      with:
        lfs: true

    - name: Install Power Platform CLI
      uses: microsoft/powerplatform-actions/actions-install@v1

    - name: Fetch the ready to ship solution from GH artifact store
      uses: actions/download-artifact@v4
      with:
        name: managedSolutions
        path: ${{ inputs.solution_release_folder}}

    - name: Run Solution Checker before PRODUCTION deployment
      uses: microsoft/powerplatform-actions/check-solution@v1
      with:
        environment-url: ${{ vars.PRODUCTION_ENVIRONMENT_URL || inputs.PRODUCTION_ENVIRONMENT_URL }}
        app-id: ${{inputs.CLIENT_ID}}
        client-secret: ${{ secrets.envSecret }}
        tenant-id: ${{inputs.TENANT_ID}}
        path: ${{ inputs.solution_release_folder}}/${{ inputs.solution_name }}_managed.zip

    - name: Upload PRODUCTION Solution Checker Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: prod-deployment-checker-results-${{ inputs.solution_name }}
        path: |
          ${{ runner.temp }}/PowerAppsChecker/**/*
        retention-days: 30
        
    - name: Import MANAGED solution to PROD env
      uses: microsoft/powerplatform-actions/import-solution@v1
      with:
        environment-url: ${{ vars.PRODUCTION_ENVIRONMENT_URL || inputs.PRODUCTION_ENVIRONMENT_URL }}
        app-id: ${{inputs.CLIENT_ID}}
        client-secret: ${{ secrets.envSecret }}
        tenant-id: ${{inputs.TENANT_ID}}
        solution-file: ${{ inputs.solution_release_folder}}/${{ inputs.solution_name }}_managed.zip
        force-overwrite: true
        publish-changes: true